{
    "id": "numberstream",
    "metadata": {
        "name": "Number Stream",
        "version": "0.0.1",
        "description": "package for generating and manipulating streams of numbers"
    },
    "executor": "python",
    "dependencies": [],
    "configuration": {
        "classname": "configuration.Configuration"
    },
    "node_types": {
        "number_producer": {
            "metadata": {
                "name": "Number Source",
                "description": "Emit a number"
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number"
                }
            },
            "classname": "nodes.number_producer.NumberProducer"
        },
        "number_transformer": {
            "metadata": {
                "name": "Number transformer",
                "description": "Transform an input number and output it"
            },
            "input_ports": {
                "data_in": {
                    "allow_multiple_connections": false,
                    "link_type": "numberstream:number"
                }
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number"
                }
            },
            "classname": "nodes.number_transformer.NumberTransformer"
        },
        "number_aggregator": {
            "metadata": {
                "name": "Number Aggregator",
                "description": "Aggregate any input number(s) received"
            },
            "input_ports": {
                "data_in": {
                    "link_type": "numberstream:number"
                }
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number"
                }
            },
            "classname": "nodes.number_aggregator.NumberAggregator"
        },
         "number_display": {
            "metadata": {
                "name": "Number Display",
                "description": "Display any received number(s)"
            },
            "input_ports": {
                "data_in": {
                    "link_type": "numberstream:number"
                }
            },
            "output_ports": {
            },
            "classname": "nodes.number_display.NumberDisplay"
        },
        "number_pullstream_producer": {
            "metadata": {
                "name": "Number Pull Stream Producer",
                "description": "Create iterators returning a stream of numbers"
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number_pullstream"
                }
            },
            "classname": "nodes.number_pullstream_producer.NumberPullStreamProducer"
        },
        "number_pullstream_transformer": {
            "metadata": {
                "name": "Number Pull Stream Transformer",
                "description": "Transform numbers received from an input iterator"
            },
            "input_ports": {
                "data_in": {
                    "allow_multiple_connections": false,
                    "link_type": "numberstream:number_pullstream"
                }
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number_pullstream"
                }
            },
            "classname": "nodes.number_pullstream_transformer.NumberPullStreamTransformer"
        },
        "number_pullstream_aggregator": {
            "metadata": {
                "name": "Number Pull Stream Aggregator",
                "description": "Aggregate numbers received from input iterator(s)"
            },
            "input_ports": {
                "data_in": {
                    "link_type": "numberstream:number_pullstream"
                }
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number"
                }
            },
            "classname": "nodes.number_pullstream_aggregator.NumberPullStreamAggregator"
        },
        "number_pushstream_producer": {
            "metadata": {
                "name": "Number Push Stream Producer",
                "description": "Return a stream of numbers"
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number_pushstream"
                }
            },
            "classname": "nodes.number_pushstream_producer.NumberPushStreamProducer"
        },
        "number_pushstream_transformer": {
            "metadata": {
                "name": "Number Push Stream Transformer",
                "description": "Transform a stream of numbers"
            },
            "input_ports": {
                "data_in": {
                    "link_type": "numberstream:number_pushstream"
                }
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number_pushstream"
                }
            },
            "classname": "nodes.number_pushstream_transformer.NumberPushStreamTransformer"
        },
        "number_pushstream_aggregator": {
            "metadata": {
                "name": "Number Push Stream Aggregator",
                "description": "Aggregate numbers received from input iterator(s)"
            },
            "input_ports": {
                "data_in": {
                    "link_type": "numberstream:number_pushstream"
                }
            },
            "output_ports": {
                "data_out": {
                    "link_type": "numberstream:number"
                }
            },
            "classname": "nodes.number_pushstream_aggregator.NumberPushStreamAggregator"
        }
    },
    "link_types": {
        "number": {
            "metadata": {
                "name": "Number",
                "description": "Carry a single number"
            }
        },
        "number_pullstream": {
            "metadata": {
                "name": "Number Pull Stream",
                "description": "Stream of numbers based on the Pull Pattern (iterators)"
            }
        },
        "number_pushstream": {
            "metadata": {
                "name": "Number Push Stream",
                "description": "Stream of numbers based on the Push Pattern (callbacks)"
            }
        }
    }
}